---
- name: Fail when content is not yet synced
  fail:
    msg: "Please proceed with a manual initial sync of the repos. When the
        sync is done, provide the \"synced=true\" parameter in the
        --extra-vars or in the vars.yml file. Re-run the playbook to continue"
  when: synced is not defined

- name: "Content Views (w/o Composite Content views)"
  redhat.satellite.content_view:
    username: "{{ sat_user }}"
    password: "{{ sat_passwd }}"
    server_url: "{{ sat_url }}"
    organization: "{{ organization }}"
    name: "{{ item.name }}"
    repositories: "{{ item.repositories }}"
  loop: "{{ content_views }}"
  tags: content_views
  register: cv_changed

- name: "Composite Content Views"
  redhat.satellite.content_view:
    username: "{{ sat_user }}"
    password: "{{ sat_passwd }}"
    server_url: "{{ sat_url }}"
    organization: "{{ organization }}"
    name: "{{ item.name }}"
    composite: true
    components: "{{ item.cv | json_query(j_query) }}"
  loop: "{{ ccv }}"
  vars:
    j_query: "[*].{ content_view: @, latest: 'true' }"
  tags: ccv

- name: Publish CV when changed
  redhat.satellite.content_view_version:
    username: "{{ sat_user }}"
    password: "{{ sat_passwd }}"
    server_url: "{{ sat_url }}"
    organization: "{{ organization }}"
    content_view: "{{ item.name }}"
    lifecycle_environments: "Library"
  when: cv_changed.changed and published = True
  loop: "{{ content_views }}"
  tags: cv_publish

- name: Publish CCV when changed
  redhat.satellite.content_view_version:
    username: "{{ sat_user }}"
    password: "{{ sat_passwd }}"
    server_url: "{{ sat_url }}"
    organization: "{{ organization }}"
    content_view: "{{ item.name }}"
    lifecycle_environments: "Library"
  when: cv_changed.changed and published = True
  loop: "{{ ccv }}"
  tags: cv_publish

- name: "Pubish composite content views and promote it to test -> prod"
  redhat.satellite.content_view_version:
    username: "{{ sat_user }}"
    password: "{{ sat_passwd }}"
    server_url: "{{ sat_url }}"
    content_view: "{{ item.name }}"
    organization: "{{ organization }}"
    # Neeed to figure out how to create a loop over environments to avoid hard
    # coding stuff
    lifecycle_environments:
      - test
      - prod
  loop: "{{ ccv }}"
